##The data are simulated and not real dataset.

sales_data <- data.frame(
  day = 1:30,
  jars_fish <- c(32,36,34,30,31,33,35,36,32,34,30,29,33,31,32,36,37,35,34,33,30,32,31,30,33,34,35,36,37,32),
  jars_garlic <- c(28,27,26,30,31,28,27,29,30,31,32,30,31,33,32,34,33,32,30,29,28,30,31,33,32,34,36,35,36,33),
  jars_return_fish <- c(0,0,1,4,0,0,1,1,0,0,0,1,0,0,0,0,0,5,2,0,0,1,0,0,0,0,1,0,0,3),
  jars_return_garlic <- c(0,1,0,0,0,0,4,0,0,2,0,8,0,0,0,0,0,0,0,1,0,7,8,5,4,6,8,12,0,5)
  )
mean(sales_data$jars_fish) ##daily sales
mean(sales_data$jars_garlic)
sd(sales_data$jars_fish) ##Standard deviation
sd(sales_data$jars_garlic)
summary(sales_data$jars_fish)
summary(sales_data$jars_garlic)
-----------------------------------------------------------------------------------------------------------------------------
##graph and plot, there might be error with copy paste, if there's please try type manually.
  
par(mfrow = c(1, 2))
  hist(sales_data$jars_fish, col = "blue", main = "Jar fish Sales", xlab = "Jars Sold")
  hist(sales_data$jars_garlic, col = "red", main = "Jar garlic Sales", xlab = "Jars Sold")
  par(mfrow = c(1, 1))
##
  
boxplot(sales_data$jars_fish, sales_data$jars_garlic, names = c("Jar fish", "Jar garlic"), main = "Boxplot of Daily Jar Sales", col = c("blue", "red"), ylab = "Jars Sold")
##

plot(sales_data$day, sales_data$jars_fish, type = "b", col = "blue", ylim = c(min(sales_data), max(sales_data)), main = "Daily Sales Over Time", ylab = "Jars Sold", xlab = "Day")
  lines(sales_data$day, sales_data$jars_garlic, type = "b", col = "red")
  legend("bottomleft", c("Jar_fish","Jar_garlic") ,legend = c("Jar fish", "Jar garlic"), col = c("blue", "red"), lty = 1, pch = 1)
------------------------------------------------------------------------------------------------------------------------------
##hypothesis test,      null  hypo:   u_A =  u_B
##                alternative hypo:   u_A != u_B
## Reject null if p-value < 0.05
    
t.test(sales_data$jars_fish,sales_data$jars_garlic, paired = TRUE) ##manual type, no copy paste
  
##T suggest how large is the sales diff mean between A(fish) and B(garlic).
------------------------------------------------------------------------------------------------------------------------------------------------------------  
##F-test, F=jar_fish/jar_garlic, F mean how stable are jar_fish and jar_garlic on daily sales.
##                      null  hypo:   sigma^2_fish =  sigma^2_garlic
##                alternative hypo:   sigma^2_fish != sigma^2_garlic
    
var.test(sales_data$jars_fish, sales_data$jars_garlic)             ##manual type, no copy paste
  
## If p-value < 0.05, reject H0, Jar_fish and Jar_garlic have significantly different variances.
## If p-value ≥ 0.05, fail to reject H0, no significant difference in variance between them.
  
  sd(sales_data$jars_fish)   ##higher value tell higher fluctuation
  sd(sales_data$jars_garlic) ##higher value tell higher fluctuation
  
##We can compare which one has more stability(variance) then other one.
------------------------------------------------------------------------------------------------------------------------------------------------------------
# 95% CI for jars_fish&garlic, (95%->0.975 || 99% ->0.995 || 90% -> 0.95)
    
length(sales_data$jars_fish)
x_bar_fish <- mean(sales_data$jars_fish)
sd_fish <- sd(sales_data$jars_fish)
error_fish <- qt(0.975, df = length(sales_data$jars_fish) - 1) * sd_fish / sqrt(length(sales_data$jars_fish))
c(x_bar_fish - error_fish, x_bar_fish + error_fish)
  
length(sales_data$jars_garlic)
x_bar_garlic <- mean(sales_data$jars_garlic)
sd_garlic <- sd(sales_data$jars_garlic)
error_garlic <- qt(0.975, df = length(sales_data$jars_garlic) - 1) * sd_garlic / sqrt(length(sales_data$jars_garlic))
c(x_bar_garlic - error_garlic, x_bar_garlic + error_garlic)

print(error_fish)
print(c(x_bar_fish - error_fish, x_bar_fish + error_fish))
print(error_garlic)
print(c(x_bar_garlic - error_garlic, x_bar_garlic + error_garlic))

## We have 95% confident believe true mean daily sales of fish_jar lies between " print(c(x_bar_fish - error_fish, x_bar_fish + error_fish)) " value.
## We have 95% confident believe true mean daily sales of garlic_jar lies between " print(c(x_bar_garlic - error_garlic, x_bar_garlic + error_garlic)) "
-------------------------------------------------------------------------------------------------------------------------------
##Bias
  
true_mean_fish <- 30           #the first day sales until today for both true mean(fish and garlic)
true_mean_garlic <- 30
bias_fish <- x_bar_fish - true_mean_fish
bias_garlic <- x_bar_garlic - true_mean_garlic
cat("Bias for Jar fish:", bias_fish, "\n")
cat("Bias for Jar garlic:", bias_garlic, "\n")

##bias >0, sales higher than expect
##bias =0, what we expected
##bias <0, sales lower than expect
-------------------------------------------------------------------------------------------------------------------------------
## Chi-squared test: Goodness of Fit
## H0: Observed sales follow a uniform distribution (no deviation from expected).
## H1: Observed sales do not follow a uniform distribution.
  
##Jar_Fish sales
chisq.test(sales_data$jars_fish)

##Jar_Garlic sales
chisq.test(sales_data$jars_garlic)

## If p-value < 0.05, reject H0, sales are not uniformly distributed. It indicates maybe the sales are not random, and some days or outcomes are significantly different from others. So we can answer question like "Do sales spike on weekends and drop on weekdays?" e.t.c.
## If p-value ≥ 0.05, fail to reject H0, no evidence against uniform distribution. This indicates that we do not provide sufficient evidence to conclude that sales are anything but uniformly distributed. Example) Let's say we have promotion here and we get this result, so we can say that we data did not provide enough evidence to conclude that the promotion had a statistically significant effect.
-------------------------------------------------------------------------------------------------------------------------------
##Number of returns on goods (Poisson distribution is being used here because events are independent)

lambda_fish <- mean(sales_data$jars_return_fish) ##Average return rate
lambda_garlic <- mean(sales_data$jars_return_garlic)
dpois(0:10, lambda_fish) ##Prob of the rate getting return with 0,...,10 in a day
dpois(0:10, lambda_garlic)
returns_fish <- rpois(30, lambda_fish) #Simulate 30 days of returns w/ random distribution, which mean it's used for prediction.
returns_garlic <- rpois(30, lambda_garlic)
mean(returns_fish) ##average daily returns observed
mean(returns_garlic)
var(returns_fish) ##sqrt(var(return)) is the value of get return w/ more details, mean +- sqrt(var)
var(returns_garlic)

par(mfrow = c(1, 2))
hist(returns_fish, col="blue", main="Daily Returns_fish", xlab="Returns per Day") ##prediction based on lambda_fish and garlic
hist(returns_garlic,col="red", main="Daily Returns_garlic", xlab="Returns per Day")
par(mfrow = c(1, 1)) 

par(mfrow=c(1,2))
hist(sales_data$jars_return_fish, col="blue", main="Daily Fish Returns", xlab="Number of Returns") ##Return rate based on actual case
hist(sales_data$jars_return_garlic, col="red", main="Daily Garlic Returns", xlab="Number of Returns")
par(mfrow=c(1,1))

## When the number of returns is higher than average, it may indicate a recent issue such as product defect or might have issue with the origin of the goods e.t.c.
-------------------------------------------------------------------------------------------------------------------------------
##
